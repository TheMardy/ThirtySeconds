# This is a basic workflow to help you get started with Actions

name: CI - Release

# Controls when the action will run. 
on:
  # Triggers the workflow on Push to master
  push:
    tags: '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      -  name: Prepare
         id: prepare
         run: |
              TAG=${GITHUB_REF#refs/tags/}
              echo ::set-output name=version::${TAG%-*}
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
       # Change CACHE_NAME so that the app can automatically update
      - name: Update CACHE_NAME
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "thirty-seconds-cache-v-X"
          replace: "thirty-seconds-cache-v-${{ github.sha }}" 
          include: "service-worker.js"
          
      # Change Version to the tag 
      - name: Update CACHE_NAME
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "_VERSION"
          replace: "${{ steps.prepare.outputs.version }}" 
          include: "src/components/Settings.svelte"
        
      # Set up Node and
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          
      # Install node modules
      - name: Install node modules
        run: npm ci
        
      # Create production build
      - name: Create production build
        run: npm run build
      
      # Deploy to Server
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }} 
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
      
    
